#  ############  SECURITY WARNING ! ###################
# run this docker image behind firewall, as this will expose an port
# and allow password ssh login
# default user password must be specified during docker build as an ARG
#########################################################################
# this layer add ssh, X11 forwarding, sudo capacity
# it can be based on any image, to add ssh access feature
#       mkdir .ssh
#       ssh-keygen -b 1024 -t rsa -f .ssh/ssh_host_key_rsa
# build with the following command (in the folder where pubkey has been generated)
#       sudo docker build -f Dockerfile_ssh -t  ppp_openmc_ssh . --no-cache --build-arg PW=your_password
#
# To test ssh X11Forwarding
#     docker run --rm -p 2222:22 ppp_openmc_ssh
# 1) client must have been tested to be working with X11 forwarding with other remote ssh server
#    debug connection by -v option  `ssh -vv -Y -p 2222 jovyan@10.215.131.63`
# 2) user root is not usually allowed to do X11 forwarding, 
#
# if can not open DISPLAY, check if -X or -Y option has been set in ssh client command
# 
# error "X11 forwarding request failed on channel 0"
# solved by adding `X11UseLocalhost no`  `X11Forwarding yes`  to  /etc/ssh/sshd_config
############################################################################

FROM qingfengxia/ppp_openmc_mpi

# for SECURITY reason, password must not been hardcoded into dockerfile
ARG PW
# normal login user created in base image as ENV NB_USER="jovyan"


USER root

####################  
# install ssh server 
####################
RUN apt-get install sudo openssh-server  nano  -y

################# ssh user ####################
# for ubuntu base image, there is no such group of sudo, no user except root
RUN  if [ ! -d "/home/$NB_USER" ] ; then \
        echo "create login user $NB_USER" ; \
        useradd -rm -d /home/$NB_USER -s /bin/bash -g $NB_USER -G sudo -u 1000 $NB_USER ; \
    fi

# change password, add to sudo group
#RUN  echo '$NB_USER:$PW' | chpasswd  && usermod -aG sudo $NB_USER
RUN  echo "$NB_USER:$PW" && echo "$NB_USER:$PW" | chpasswd  && usermod -aG sudo $NB_USER

# Allow members of group sudo to execute any command
# TAB key causes some trouble,  use more spaces before "ALL=" seems working

RUN echo "%sudo    ALL=(ALL:ALL) ALL" >> /etc/sudoers

# if above still not working add this user to /etc/sudoers
#RUN echo "$NB_USER	        ALL=(ALL:ALL) ALL" >> /etc/sudoers

############### host key setup #################
# https://nickjanetakis.com/blog/docker-tip-56-volume-mounting-ssh-keys-into-a-docker-container
# copy the ssh key from host, so to fix the host public key when rebuilding the image
# every time install openssh-server, ssh key will be generated

COPY .ssh /root/.ssh
RUN  chmod 700 /root/.ssh && \
     chmod 644 /root/.ssh/ssh_host_key_rsa.pub && \
     chmod 600 /root/.ssh/ssh_host_key_rsa

RUN  cp /root/.ssh/ssh_host_key_rsa.pub  /etc/ssh/ && \
        cp /root/.ssh/ssh_host_key_rsa /etc/ssh/

# sshd_config has been modified by adding those lines
# to enable X11 forwarding via ssh, by default has been enabled
RUN echo "X11Forwarding yes" >> /etc/ssh/sshd_config  && echo "X11UseLocalhost no" >> /etc/ssh/sshd_config
RUN echo "HostKey /etc/ssh/ssh_host_key_rsa" >> /etc/ssh/sshd_config

# expose port, the default port, docker will map to another part on host like 2222
EXPOSE 22
##################


# the public key has a "user@host" fixed as the key creator
# Error "Unable to load host key: /etc/ssh/ssh_host_key_rsa"
CMD ["/usr/sbin/sshd", "-D"]
#CMD ["service ssh start"]   # this does not work, Error: exec service ssh start failed: No such file or directory


USER $NB_USER

# make software linked with opengl to work in ssh remote X11  (do not use hardware 3D acceleration)
RUN echo "export LIBGL_ALWAYS_INDIRECT=1" >> $HOME/.bashrc

# matplotlib needs this XDG_RUNTIME_DIR for ssh user
RUN  mkdir $HOME/.xdg_runtime_dir && chmod 700 $HOME/.xdg_runtime_dir  \ 
         && echo  "export XDG_RUNTIME_DIR=$HOME/.xdg_runtime_dir" >> $HOME/.bashrc

COPY test_openmc_docker_image.sh  $HOME/test_openmc_docker_image.sh